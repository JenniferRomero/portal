{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///(webpack)/buildin/global.js","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/http/jwt/jwt.service.ts","webpack:///src/app/core/interceptors/auth-token/auth-token.interceptor.ts","webpack:///src/app/core/routes/preloading-strategy.service.ts","webpack:///src/app/core/translate/translate.loader.ts","webpack:///src/app/services/encryption/encryption.service.ts","webpack:///src/app/services/exceptions/error-global.ts","webpack:///src/app/services/exceptions/error-options.ts","webpack:///src/app/services/exceptions/error.service.ts","webpack:///src/app/services/exceptions/global-error-handler.service.ts","webpack:///src/app/services/exceptions/logging.service.ts","webpack:///src/app/services/http/generate-qr/generate-qr.service.ts","webpack:///src/app/services/idle-timeout/idle-timeout.service.ts","webpack:///src/app/services/local-storage/local-storage.service.ts","webpack:///src/app/services/services.index.ts","webpack:///src/app/services/services.module.ts","webpack:///src/app/services/session-storage/session-storage.service.ts","webpack:///src/app/services/validate-data/validate-data.service.ts","webpack:///src/app/shared/shared.index.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/theme/footer/footer.component.ts","webpack:///src/app/shared/theme/footer/footer.component.html","webpack:///src/app/shared/theme/header/header.component.ts","webpack:///src/app/shared/theme/header/header.component.html","webpack:///src/app/shared/theme/not-authorized/not-authorized.component.ts","webpack:///src/app/shared/theme/not-authorized/not-authorized.component.html","webpack:///src/app/shared/theme/page-not-found/page-not-found.component.ts","webpack:///src/app/shared/theme/page-not-found/page-not-found.component.html","webpack:///src/app/shared/theme/service-error/service-error.component.ts","webpack:///src/app/shared/theme/service-error/service-error.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///util (ignored)","webpack:///util (ignored)?f5a4","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","g","Function","window","appRoutes","path","loadChildren","m","PagesModule","data","preload","ValidateTokenModule","component","AppRoutingModule","forRoot","useHash","enableTracing","preloadingStrategy","imports","AppComponent","_idle","http","_keepalive","errorTypes","_logger","errorStages","errorMessages","translate","_generateQrService","_idleTimeoutService","_validateDataService","timedOut","langs","lastPing","idleState","idleTimeout","validateId","console","log","getMessageError","validateIdType","browserlang","getBrowserLang","indexOf","setDefaultLang","lang","stateSession","subscribe","setIdle","setTimeout","setInterrupts","onIdleEnd","reset","onTimeout","onIdleStart","onTimeoutWarning","countdown","interval","onPing","Date","watch","ERROR","QR","F143","get","selector","templateUrl","styleUrls","providers","AppModule","provide","useClass","defaultLanguage","loader","useFactory","deps","level","DEBUG","serverLogLevel","timeOut","declarations","bootstrap","JwtService","username","password","urlAccessToken","requestUrl","headers","btoa","post","providedIn","AuthTokenInterceptor","_jwtService","accessToken","next","handle","handleAccess","request","api_key","getAccessToken","clone","toPromise","error","AuthTokenProvider","multi","PreloadingStrategyService","route","load","HttpClientTrans","handler","HttpLoaderFactory","EncryptionService","_masterEncrypt","_masterDecrypt","value","JSON","parse","encrypt","stringify","encryptInfo","reject","decrypt","ErrorGlobal","type","stage","message","httpStatus","handled","name","Object","setPrototypeOf","prototype","ErrorTypes","INFO","WARNING","FATAL_ERROR","ErrorStages","PUSH","ErrorMessages","F141","F142","F144","F145","F146","F147","F148","F149","F150","T141","T142","T143","T144","T145","T146","T147","T148","T149","T150","ErrorService","toString","stack","navigator","onLine","GlobalErrorHandlerService","injector","errorService","logger","stackTrace","getServerErrorMessage","logError","getClientErrorMessage","getClientErrorStack","LoggingService","toastr","fatal","warn","debug","info","showError","warning","GenerateQrService","generateQr","IdleTimeoutService","validateSession","asObservable","logout","LocalStorageService","key","localStorage","getItem","item","setItem","removeItem","clear","ServicesModule","SessionStorageService","sessionStorage","ValidateDataService","REGEX_NUMBERS","documentId","result","regex","RegExp","matcher","test","setMessageError","length","documentType","pathMsg","initPath","messageError","instant","SharedModule","FooterComponent","HeaderComponent","NotAuthorizedComponent","PageNotFoundComponent","ServiceErrorComponent","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;ACZA,QAAIC,CAAJ,C,CAEA;;AACAA,KAAC,GAAI,YAAW;AACf,aAAO,IAAP;AACA,KAFG,EAAJ;;AAIA,QAAI;AACH;AACAA,OAAC,GAAGA,CAAC,IAAI,IAAIC,QAAJ,CAAa,aAAb,GAAT;AACA,KAHD,CAGE,OAAOR,CAAP,EAAU;AACX;AACA,UAAI,OAAOS,MAAP,KAAkB,QAAtB,EAAgCF,CAAC,GAAGE,MAAJ;AAChC,K,CAED;AACA;AACA;;;AAEAL,UAAM,CAACC,OAAP,GAAiBE,CAAjB;;;;;;;;;;;;;;;;ACnBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMG,SAAS,GAAW;AACxB;;;;;AAKA;AACEC,UAAI,EAAE,EADR;AAEEC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,4CAA+Bb,IAA/B,CAAoC,UAAAc,CAAC;AAAA,iBAAIA,CAAC,CAACC,WAAN;AAAA,SAArC,CAAN;AAAA,OAFhB;AAGEC,UAAI,EAAE;AAAEC,eAAO,EAAE;AAAX;AAHR,KANwB,EAWxB;AACEL,UAAI,EAAE,gBADR;AAEEC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,8DAAiDb,IAAjD,CAAsD,UAAAc,CAAC;AAAA,iBAAIA,CAAC,CAACI,mBAAN;AAAA,SAAvD,CAAN;AAAA;AAFhB,KAXwB,EAexB;AACEN,UAAI,EAAE,IADR;AAEEO,eAAS,EAAE;AAFb,KAfwB,CAA1B;;QA6BaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAPlB,CAAC,6DAAaC,OAAb,CAAqBV,SAArB,EAAgC;AACxCW,eAAO,EAAE,IAD+B;AAExCC,qBAAa,EAAE,KAFyB;AAGxCC,0BAAkB,EAAE;AAHoB,OAAhC,CAAD,CAOkB,EAFjB,4DAEiB;;;;0HAAhBJ,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAR5B,sDAQ4B;eARnB;AACRK,iBAAO,EAAE,CAAC,6DAAaJ,OAAb,CAAqBV,SAArB,EAAgC;AACxCW,mBAAO,EAAE,IAD+B;AAExCC,yBAAa,EAAE,KAFyB;AAGxCC,8BAAkB,EAAE;AAHoB,WAAhC,CAAD,CADD;AAMRlB,iBAAO,EAAE,CAAC,4DAAD;AAND,S;AAQmB,Q;;;;;;;;;;;;;;;;;;AC/B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaoB,Y;;;AAOX,4BACSC,KADT,EAEUC,IAFV,EAGSC,UAHT,EAISC,UAJT,EAKSC,OALT,EAMSC,WANT,EAOSC,aAPT,EAQUC,SARV,EASSC,kBATT,EAUSC,mBAVT,EAWSC,oBAXT,EAWoD;AAAA;;AAV3C,aAAAV,KAAA,GAAAA,KAAA;AACC,aAAAC,IAAA,GAAAA,IAAA;AACD,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACC,aAAAC,SAAA,GAAAA,SAAA;AACD,aAAAC,kBAAA,GAAAA,kBAAA;AACA,aAAAC,mBAAA,GAAAA,mBAAA;AACA,aAAAC,oBAAA,GAAAA,oBAAA;AAhBT,aAAAC,QAAA,GAAW,KAAX;AACA,aAAAC,KAAA,GAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACA,aAAAC,QAAA,GAAkB,IAAlB;AACA,aAAAC,SAAA,GAAY,cAAZ;AAeE,aAAKC,WAAL;;AAEA,YAAG,CAACL,oBAAoB,CAACM,UAArB,CAAgC,YAAhC,CAAJ,EAAkD;AAChDC,iBAAO,CAACC,GAAR,CAAYR,oBAAoB,CAACS,eAArB,EAAZ;AACD;;AAED,YAAG,CAACT,oBAAoB,CAACU,cAArB,CAAoC,IAApC,CAAJ,EAA8C;AAC5CH,iBAAO,CAACC,GAAR,CAAYR,oBAAoB,CAACS,eAArB,EAAZ;AACD;AACF;;;;mCAEO;AAEN,cAAIE,WAAW,GAAG,KAAKd,SAAL,CAAee,cAAf,EAAlB;;AACA,cAAI,KAAKV,KAAL,CAAWW,OAAX,CAAmBF,WAAnB,IAAkC,CAAC,CAAvC,EAA0C;AACxC,iBAAKd,SAAL,CAAeiB,cAAf,CAA8BH,WAA9B;AACD,WAFD,MAEO;AACL,iBAAKd,SAAL,CAAeiB,cAAf,CAA8B,IAA9B;AACD;AAED;;;;AAGD;;;oCAEWC,I,EAAY;AACtB,eAAKlB,SAAL,CAAeiB,cAAf,CAA8BC,IAA9B;AACD;;;sCAEa;AAAA;;AACZ,eAAKhB,mBAAL,CAAyBiB,YAAzB,CAAsCC,SAAtC,CAAgD,UAAAD,YAAY,EAAI;AAC9D,gBAAGA,YAAH,EAAgB;AACd,mBAAI,CAAC1B,KAAL,CAAW4B,OAAX,CAAmB,CAAnB;;AACA,mBAAI,CAAC5B,KAAL,CAAW6B,UAAX,CAAsB,0EAAI,MAAJ,EAAY,aAAZ,CAAtB;;AACA,mBAAI,CAAC7B,KAAL,CAAW8B,aAAX,CAAyB,sEAAzB;;AAEA,mBAAI,CAAC9B,KAAL,CAAW+B,SAAX,CAAqBJ,SAArB,CAA+B,YAAM;AACnC,qBAAI,CAACb,SAAL,GAAiB,iBAAjB;AACAG,uBAAO,CAACC,GAAR,CAAY,KAAI,CAACJ,SAAjB;;AACA,qBAAI,CAACkB,KAAL;AACD,eAJD;;AAMA,mBAAI,CAAChC,KAAL,CAAWiC,SAAX,CAAqBN,SAArB,CAA+B,YAAM;AACnC,qBAAI,CAACb,SAAL,GAAiB,YAAjB;AACA,qBAAI,CAACH,QAAL,GAAgB,IAAhB;AACAM,uBAAO,CAACC,GAAR,CAAY,KAAI,CAACJ,SAAjB,EAHmC,CAInC;AACD,eALD;;AAOA,mBAAI,CAACd,KAAL,CAAWkC,WAAX,CAAuBP,SAAvB,CAAiC,YAAM;AACrC,qBAAI,CAACb,SAAL,GAAiB,oBAAjB;AACAG,uBAAO,CAACC,GAAR,CAAY,KAAI,CAACJ,SAAjB,EAFqC,CAGrC;AACD,eAJD;;AAMA,mBAAI,CAACd,KAAL,CAAWmC,gBAAX,CAA4BR,SAA5B,CAAsC,UAACS,SAAD,EAAe;AACnD,qBAAI,CAACtB,SAAL,GAAiB,0BAA0BsB,SAA1B,GAAsC,WAAvD;AACAnB,uBAAO,CAACC,GAAR,CAAY,KAAI,CAACJ,SAAjB;AACD,eAHD;;AAKA,mBAAI,CAACZ,UAAL,CAAgBmC,QAAhB,CAAyB,EAAzB;;AACA,mBAAI,CAACnC,UAAL,CAAgBoC,MAAhB,CAAuBX,SAAvB,CAAiC;AAAA,uBAAM,KAAI,CAACd,QAAL,GAAgB,IAAI0B,IAAJ,EAAtB;AAAA,eAAjC;;AACA,mBAAI,CAACP,KAAL;AACD;AACF,WAlCD;AAmCD;;;gCAEO;AACR,eAAKhC,KAAL,CAAWwC,KAAX;;AACA,eAAK1B,SAAL,GAAiB,UAAjB;AACA,eAAKH,QAAL,GAAgB,KAAhB;AACC;;;qCAEY;AACX,gBAAM,IAAI,6EAAJ,CAAgB,KAAKR,UAAL,CAAgBsC,KAAhC,EAAuC,KAAKpC,WAAL,CAAiBqC,EAAxD,EAA4D,KAAKpC,aAAL,CAAmBqC,IAA/E,CAAN;AACD;;;yCAEgB;AACf,eAAK1C,IAAL,CAAU2C,GAAV,CAAc,SAAd,EAAyBjB,SAAzB;AACD;;;;;;;uBAnGU5B,Y,EAAY,mH,EAAA,gI,EAAA,6H,EAAA,8I,EAAA,oJ,EAAA,+I,EAAA,iJ,EAAA,qI,EAAA,2I,EAAA,4I,EAAA,6I;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,kFAFZ,CAAC,gFAAD,EAAgB,6EAAhB,EAA4B,8EAA5B,CAEY,E;AAF4B,c;AAAA,a;AAAA;AAAA;ACfrD;;;;;;;;;sEDiBaA,Y,EAAY;cANxB,uDAMwB;eANd;AACT8C,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD,CAHF;AAITC,mBAAS,EAAE,CAAC,gFAAD,EAAgB,6EAAhB,EAA4B,8EAA5B;AAJF,S;AAMc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA2DaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBATT,CACT,uGADS,EAET,kGAFS,EAGT;AAAEC,eAAO,EAAE,0DAAX;AACEC,gBAAQ,EAAE;AADZ,OAHS,C;AAMV,gBA9BQ,CACP,oEAAgBzD,OAAhB,CAAwB;AACtB0D,uBAAe,EAAE,IADK;AAEtBC,cAAM,EAAE;AACJH,iBAAO,EAAE,mEADL;AAEJI,oBAAU,EAAG,mFAFT;AAGJC,cAAI,EAAE,CAAC,iFAAD;AAHF;AAFc,OAAxB,CADO,EASP,kEATO,EAUP,uEAVO,EAWP,wEAXO,EAYP,oEAZO,EAaP,qEAbO,EAcP,yEAAsB7D,OAAtB,EAdO,EAeP,yDAAaA,OAAb,CAAqB;AACnB;AACA8D,aAAK,EAAE,2DAAeC,KAFH;AAGnBC,sBAAc,EAAE,2DAAejB;AAHZ,OAArB,CAfO,EAoBP,6FApBO,EAqBP,yDAAa/C,OAAb,CAAqB;AACnBiE,eAAO,EAAE;AADU,OAArB,CArBO,CA8BR;;;;0HAGUV,S,EAAS;AAAA,uBAnClB,2DAmCkB;AAnCN,uFAWZ,kEAXY,EAYZ,uEAZY,EAaZ,wEAbY,EAcZ,oEAdY,EAeZ,qEAfY,EAeI,wEAfJ,EAeI,wDAfJ,EAsBZ,6FAtBY,EAsBW,wDAtBX;AAmCM,O;AAbK,K;;;;;sEAadA,S,EAAS;cArCrB,sDAqCqB;eArCZ;AACRW,sBAAY,EAAE,CACZ,2DADY,CADN;AAIR9D,iBAAO,EAAE,CACP,oEAAgBJ,OAAhB,CAAwB;AACtB0D,2BAAe,EAAE,IADK;AAEtBC,kBAAM,EAAE;AACJH,qBAAO,EAAE,mEADL;AAEJI,wBAAU,EAAG,mFAFT;AAGJC,kBAAI,EAAE,CAAC,iFAAD;AAHF;AAFc,WAAxB,CADO,EASP,kEATO,EAUP,uEAVO,EAWP,wEAXO,EAYP,oEAZO,EAaP,qEAbO,EAcP,yEAAsB7D,OAAtB,EAdO,EAeP,yDAAaA,OAAb,CAAqB;AACnB;AACA8D,iBAAK,EAAE,2DAAeC,KAFH;AAGnBC,0BAAc,EAAE,2DAAejB;AAHZ,WAArB,CAfO,EAoBP,6FApBO,EAqBP,yDAAa/C,OAAb,CAAqB;AACnBiE,mBAAO,EAAE;AADU,WAArB,CArBO,CAJD;AA4BRX,mBAAS,EAAE,CACT,uGADS,EAET,kGAFS,EAGT;AAAEE,mBAAO,EAAE,0DAAX;AACEC,oBAAQ,EAAE;AADZ,WAHS,CA5BH;AAmCRU,mBAAS,EAAE,CAAC,2DAAD;AAnCH,S;AAqCY,Q;;;;;;;;;;;;;;;;;;AC3DtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,U;;;AAEX,0BAAoB7D,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;AAEzC;;;;;;;yCAGiB;AACf,cAAI8D,QAAQ,GAAG,sEAAI,MAAJ,EAAY,UAAZ,CAAf;AACA,cAAIC,QAAQ,GAAG,sEAAI,MAAJ,EAAY,UAAZ,CAAf;AACA,cAAIC,cAAc,GAAG,sEAAI,WAAJ,EAAiB,aAAjB,CAArB;AACA,cAAIC,UAAU,GAAGD,cAAc,GAAG,gCAAlC;AAEA,cAAME,OAAO,GAAG;AACd,oBAAQ,MADM;AAEd,4BAAgB,mCAFF;AAGd,6BAAiB,WAAWC,IAAI,CAACL,QAAQ,GAAG,GAAX,GAAiBC,QAAlB;AAHlB,WAAhB;AAMA,iBAAO,KAAK/D,IAAL,CAAUoE,IAAV,CAAeH,UAAf,EAA2B,IAA3B,EAAiC;AAAEC,mBAAO,EAAPA;AAAF,WAAjC,CAAP;AACD;;;;;;;uBApBUL,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVQ,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCWVC,oB;;;AAIX,oCAAoBC,WAApB,EAA6C;AAAA;;AAAzB,aAAAA,WAAA,GAAAA,WAAA;AAFpB,aAAAC,WAAA,GAAc,IAAd;AAEgD;;;;kCAEtCvG,G,EAAuBwG,I,EAAiB;AAEhD,cAAIxG,GAAG,CAACiG,OAAJ,CAAYvB,GAAZ,CAAgB,MAAhB,CAAJ,EAA4B;AAC1B,mBAAO8B,IAAI,CAACC,MAAL,CAAYzG,GAAZ,CAAP;AACD;;AAED,iBAAO,kDAAY,KAAK0G,YAAL,CAAkB1G,GAAlB,EAAuBwG,IAAvB,CAAZ,CAAP;AACD;;;qCAE0BxG,G,EAAuBwG,I,EAAiB;;;;;;;;;AAE7DG,2B,GAAU3G,G;AACV4G,2B,GAAU,sEAAI,MAAJ,EAAY,QAAZ,C;;AACI,2BAAM,KAAKC,cAAL,EAAN;;;AAAdN,+B;AAEEN,2B,GAAU,IAAI,gEAAJ,CAAgB;AAC9B,mCAAaW,OADiB;AAE9B,uCAAiB,YAAYL;AAFC,qBAAhB,C;AAKhBI,2BAAO,GAAG3G,GAAG,CAAC8G,KAAJ,CAAU;AAACb,6BAAO,EAAPA;AAAD,qBAAV,CAAV;qDAEOO,IAAI,CAACC,MAAL,CAAYE,OAAZ,EAAqBI,SAArB,E;;;;;;;;;AACR;;;yCAEa;AAAA;;AACZ,iBAAO,IAAI9G,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,kBAAI,CAACoG,WAAL,CAAiBO,cAAjB,GAAkCpD,SAAlC,CAA4C,UAAAtC,IAAI,EAAI;AAClD,kBAAGA,IAAI,CAAC,cAAD,CAAP,EAAwB;AACtBjB,uBAAO,CAACiB,IAAI,CAAC,cAAD,CAAL,CAAP;AACD;AACF,aAJD;AAKD,WANM,CAAP;AAOD;;;oCAEW6F,K,EAA0B;AACpC,iBAAO,wDAAWA,KAAX,CAAP;AACD;;;;;;;uBA3CUX,oB,EAAoB,wH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB;;;;;sEAApBA,oB,EAAoB;cADhC;AACgC,Q;;;;;;;AA8C1B,QAAMY,iBAAiB,GAAG;AAC/BjC,aAAO,EAAE,sEADsB;AAE/BC,cAAQ,EAAEoB,oBAFqB;AAG/Ba,WAAK,EAAE;AAHwB,KAA1B;;;;;;;;;;;;;;;;AChEP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,yB;;;AAEX,2CAAc;AAAA;AAAG;;;;gCAETC,K,EAAcC,I,EAA2B;AAC/C,cAAID,KAAK,CAACjG,IAAN,IAAciG,KAAK,CAACjG,IAAN,CAAW,SAAX,CAAlB,EAAyC;AACvC,mBAAOkG,IAAI,EAAX;AACD,WAFD,MAEO;AACL,mBAAO,gDAAG,IAAH,CAAP;AACD;AACF;;;;;;;uBAVUF,yB;AAAyB,K;;;aAAzBA,yB;AAAyB,eAAzBA,yBAAyB,K;AAAA,kBAFxB;;;;;sEAEDA,yB,EAAyB;cAHrC,wDAGqC;eAH1B;AACVf,oBAAU,EAAE;AADF,S;AAG0B,Q;;;;;;;;;;;;;;;;;;;;ACPtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKakB,e;;;;;;;AACX,+BAAYC,OAAZ,EAAkC;AAAA;;AAAA,iCAC1BA,OAD0B;AAEjC;;;MAHkC,+D;;;uBAAxBD,e,EAAe,wH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBADH;;;;;sEACZA,e,EAAe;cAD3B,wDAC2B;eADhB;AAAClB,oBAAU,EAAE;AAAb,S;AACgB,Q;;;;;;;AAMrB,aAASoB,iBAAT,CAA2BzF,IAA3B,EAA6C;AAClD,aAAO,IAAI,8EAAJ,CAAwBA,IAAxB,EAA8B,gBAA9B,EAAgD,OAAhD,CAAP;AACD;;;;;;;;;;;;;;;;;ACbD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKa0F,iB;;;AAKX,mCAAc;AAAA;;AAHd,aAAAC,cAAA,GAAiB,sEAAI,MAAJ,EAAY,cAAZ,EAA4B,eAA5B,CAAjB;AACA,aAAAC,cAAA,GAAiB,sEAAI,MAAJ,EAAY,cAAZ,EAA4B,eAA5B,CAAjB;AAEiB;AAEjB;;;;;;;;;wCAKgBC,K,EAAU;AACxB,iBAAOC,IAAI,CAACC,KAAL,CAAW,6CAAIC,OAAJ,CAAY,KAAKL,cAAjB,EAAiCG,IAAI,CAACG,SAAL,CAAeJ,KAAf,CAAjC,CAAX,CAAP;AACD;AAED;;;;;;;;8CAKsBA,K,EAAU;AAC9B,iBAAO,6CAAIG,OAAJ,CAAY,KAAKL,cAAjB,EAAiCG,IAAI,CAACG,SAAL,CAAeJ,KAAf,CAAjC,CAAP;AACD;AAED;;;;;;;;oCAKYK,W,EAAgB;AAAA;;AAC1B,iBAAO,IAAIhI,OAAJ,CAAY,UAACC,OAAD,EAAUgI,MAAV,EAAqB;AACtC,gBAAI;AACFhI,qBAAO,CAAC,6CAAIiI,OAAJ,CAAY,MAAI,CAACR,cAAjB,EAAiCE,IAAI,CAACG,SAAL,CAAeC,WAAf,CAAjC,CAAD,CAAP;AACD,aAFD,CAEE,OAAO7H,CAAP,EAAU;AACV8H,oBAAM,CAAC9H,CAAD,CAAN;AACD;AACF,WANM,CAAP;AAOD;;;;;;;uBAtCUqH,iB;AAAiB,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB;;;;;sEAAjBA,iB,EAAiB;cAD7B;AAC6B,Q;;;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;;QAAaW,W;;;;;;;AAUT,2BAAYC,IAAZ,EAA2BC,KAA3B,EAA2CC,OAA3C,EAA6D;AAAA;;AAAA;;AAC3D,oCAAMA,OAAN;AANF,eAAAC,UAAA,GAAsB,GAAtB;AAGA,eAAAC,OAAA,GAAmB,KAAnB;AAIE,eAAKC,IAAL,GAAYN,WAAW,CAACM,IAAxB;AACA,eAAKL,IAAL,GAAYA,IAAZ;AACA,eAAKC,KAAL,GAAaA,KAAb;AACAK,cAAM,CAACC,cAAP,iCAA4BR,WAAW,CAACS,SAAxC;AAL2D;AAM5D;;;;;qBAhB4BxI,K;;;;;;;;;;;;;;;;;ACAjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAAayI,U,GAQX,sBAAc;AAAA;;AAPd;AACA,WAAAC,IAAA,GAAO,MAAP;AACA,WAAAxD,KAAA,GAAQ,OAAR;AACA,WAAAyD,OAAA,GAAU,SAAV;AACA,WAAAzE,KAAA,GAAQ,OAAR;AACA,WAAA0E,WAAA,GAAc,aAAd;AAEgB,K;;QAGLC,W,GAIX,uBAAc;AAAA;;AAHd,WAAA1E,EAAA,GAAK,sBAAL;AACA,WAAA2E,IAAA,GAAO,oBAAP;AAEgB,K;;QAGLC,a,GAuBX,yBAAc;AAAA;;AAtBd,WAAAC,IAAA,GAAO,4BAAP;AACA,WAAAC,IAAA,GAAO,iCAAP;AACA,WAAA7E,IAAA,GAAO,cAAP;AACA,WAAA8E,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AAEA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AACA,WAAAC,IAAA,GAAO,cAAP;AAEgB,K;;;;;;;;;;;;;;;;;ACzClB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y;;;;;;;;;8CAGWxD,K,EAAY;AAChC,iBAAOA,KAAK,CAACuB,OAAN,GACAvB,KAAK,CAACuB,OADN,GAEAvB,KAAK,CAACyD,QAAN,EAFP;AAGD;;;4CAEmBzD,K,EAAY;AAC9B,iBAAOA,KAAK,CAAC0D,KAAN,GACA1D,KAAK,CAAC0D,KADN,GAEA1D,KAAK,CAACyD,QAAN,EAFP;AAGD;;;8CAEqBzD,K,EAAwB;AAC5C,iBAAO2D,SAAS,CAACC,MAAV,GACA5D,KAAK,CAACuB,OADN,GAEA,KAAKnG,aAAL,CAAmBiH,IAF1B;AAGD;;;;;;;uBAnBUmB,Y;AAAY,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVpE,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUayE,yB;;;AAEX,yCAAoBC,QAApB,EAA+C1I,aAA/C,EAAoFH,UAApF,EAA4G;AAAA;;AAAxF,aAAA6I,QAAA,GAAAA,QAAA;AAA2B,aAAA1I,aAAA,GAAAA,aAAA;AAAqC,aAAAH,UAAA,GAAAA,UAAA;AAA2B;;;;oCAEnG+E,K,EAAsC;AAChD,cAAM+D,YAAY,GAAG,KAAKD,QAAL,CAAcpG,GAAd,CAAkB,2DAAlB,CAArB;AACA,cAAMsG,MAAM,GAAG,KAAKF,QAAL,CAAcpG,GAAd,CAAkB,+DAAlB,CAAf;AAEA,cAAI6D,OAAJ;AACA,cAAI0C,UAAJ;;AAEA,cAAIjE,KAAK,YAAY,sEAArB,EAAwC;AAAE;AACxCuB,mBAAO,GAAGwC,YAAY,CAACG,qBAAb,CAAmClE,KAAnC,CAAV;AACAiE,sBAAU,GAAGjE,KAAK,CAACuB,OAAnB;AACAyC,kBAAM,CAACG,QAAP,CAAgB,KAAKlJ,UAAL,CAAgBsC,KAAhC,EAAuC,KAAKnC,aAAL,CAAmBkH,IAA1D,EAAgEf,OAAhE,EAAyE0C,UAAzE;AACD,WAJD,MAIO,IAAIjE,KAAK,YAAY3G,KAArB,EAA4B;AAAG;AACpCkI,mBAAO,GAAGwC,YAAY,CAACK,qBAAb,CAAmCpE,KAAnC,CAAV;AACAiE,sBAAU,GAAGF,YAAY,CAACM,mBAAb,CAAiCrE,KAAjC,CAAb;AACAgE,kBAAM,CAACG,QAAP,CAAgBnE,KAAK,CAACqB,IAAtB,EAA4BrB,KAAK,CAACsB,KAAlC,EAAyCC,OAAzC,EAAkD0C,UAAlD;AACD;AACF;;;;;;;uBApBUJ,yB,EAAyB,8G,EAAA,oH,EAAA,iH;AAAA,K;;;aAAzBA,yB;AAAyB,eAAzBA,yBAAyB,K;AAAA,kBAFxB;;;;;sEAEDA,yB,EAAyB;cAHrC,wDAGqC;eAH1B;AACVzE,oBAAU,EAAE;AADF,S;AAG0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACVtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakF,c;;;AAEX,8BAAoBpJ,OAApB,EAAgDqJ,MAAhD,EAAuE;AAAA;;AAAnD,aAAArJ,OAAA,GAAAA,OAAA;AAA4B,aAAAqJ,MAAA,GAAAA,MAAA;AAA0B;;;;iCAE/DlD,I,EAAcC,K,EAAeC,O,EAAiBmC,K,EAAe;AAElE;AACA,kBAAQrC,IAAR;AACE,iBAAK,aAAL;AACE,mBAAKnG,OAAL,CAAasJ,KAAb,CAAmB,QAAnB,EAA6BlD,KAA7B,EAAoC,IAApC,EAA0CC,OAA1C,EAAmDmC,KAAnD;;AACA;;AACF,iBAAK,OAAL;AACE,mBAAKxI,OAAL,CAAa8E,KAAb,CAAmB,QAAnB,EAA6BsB,KAA7B,EAAoC,IAApC,EAA0CC,OAA1C,EAAmDmC,KAAnD;;AACA;;AACF,iBAAK,SAAL;AACE,mBAAKxI,OAAL,CAAauJ,IAAb,CAAkB,QAAlB,EAA4BnD,KAA5B,EAAmC,IAAnC,EAAyCC,OAAzC,EAAkDmC,KAAlD;;AACA;;AACF,iBAAK,OAAL;AACE,mBAAKxI,OAAL,CAAawJ,KAAb,CAAmB,QAAnB,EAA6BpD,KAA7B,EAAoC,IAApC,EAA0CC,OAA1C,EAAmDmC,KAAnD;;AACA;;AACF,iBAAK,MAAL;AACE,mBAAKxI,OAAL,CAAayJ,IAAb,CAAkB,QAAlB,EAA4BrD,KAA5B,EAAmC,IAAnC,EAAyCC,OAAzC,EAAkDmC,KAAlD;;AACA;;AACF;AACE;AAjBJ;;AAmBA,eAAKkB,SAAL,CAAevD,IAAf,EAAqBE,OAArB;AACH;;;kCAESF,I,EAAcE,O,EAAiB;AACvC,kBAAQF,IAAR;AACE,iBAAK,aAAL;AACA,iBAAK,OAAL;AACE,mBAAKkD,MAAL,CAAYvE,KAAZ,CAAkBuB,OAAlB,EAA2B,OAA3B;AACA;;AACF,iBAAK,SAAL;AACE,mBAAKgD,MAAL,CAAYM,OAAZ,CAAoBtD,OAApB,EAA6B,aAA7B;AACA;;AACF,iBAAK,OAAL;AACE,mBAAKgD,MAAL,CAAYI,IAAZ,CAAiBpD,OAAjB,EAA0B,WAA1B;AACA;;AACF,iBAAK,MAAL;AACE,mBAAKgD,MAAL,CAAYI,IAAZ,CAAiBpD,OAAjB,EAA0B,WAA1B;AACA;;AACF;AACE;AAfJ;AAiBH;;;;;;;uBA/CU+C,c,EAAc,4G,EAAA,gH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFX;;;;;sEAEHA,c,EAAc;cAH1B,wDAG0B;eAHf;AACRlF,oBAAU,EAAE;AADJ,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa0F,iB;;;AAEX,iCAAoB/J,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;kCAE/BgK,U,EAAsB;AAC9B;AACA;AACA,iBAAO,KAAKhK,IAAL,CAAUoE,IAAV,CAAe,yEAAI,WAAJ,EAAiB,YAAjB,CAAf,EAA+C4F,UAA/C,CAAP;AACD;;;;;;;uBARUD,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACV1F,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACR9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIa4F,kB;;;AAKX,oCAAc;AAAA;;AAHN,aAAAC,eAAA,GAAkB,IAAI,oDAAJ,CAAoB,KAApB,CAAlB;AACR,aAAAzI,YAAA,GAAe,KAAKyI,eAAL,CAAqBC,YAArB,EAAf;AAEgB;;;;2CAEGC,M,EAAiB;AAClC,eAAKF,eAAL,CAAqBzF,IAArB,CAA0B2F,MAA1B;AACD;;;;;;;uBATUH,kB;AAAkB,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;;;;;;;;;;;;;;;ACJ/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaI,mB;;;AAEX,qCAAc;AAAA;AAAG;;;;sCAEHC,G,EAAa;AACzB,iBAAOC,YAAY,CAACC,OAAb,CAAqBF,GAArB,CAAP;AACD;;;sCAEaA,G,EAAaG,I,EAAW;AACpCF,sBAAY,CAACG,OAAb,CAAqBJ,GAArB,EAA0BxE,IAAI,CAACG,SAAL,CAAewE,IAAf,CAA1B;AACD;;;gCAEOH,G,EAAaG,I,EAAW;AAC9BF,sBAAY,CAACG,OAAb,CAAqBJ,GAArB,EAA0BG,IAA1B;AACD;;;oCAEWH,G,EAAa;AACvB,iBAAOxE,IAAI,CAACC,KAAL,CAAWwE,YAAY,CAACC,OAAb,CAAqBF,GAArB,CAAX,CAAP;AACD;;;mCAEUA,G,EAAa;AACtBC,sBAAY,CAACI,UAAb,CAAwBL,GAAxB;AACD;;;gCAEO;AACNC,sBAAY,CAACK,KAAb;AACD;;;;;;;uBA1BUP,mB;AAAmB,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVhG,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;ACLhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA8BawG,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,iBAZd,CACT,iEADS,EAET,iEAFS,EAGT,kEAHS,EAIT,mEAJS,EAKT,qEALS,EAMT,6DANS,EAOT,0DAPS,EAQT,2DARS,C;AASV,gBAZQ,CACP,4DADO,CAYR;;;;0HAGUA,c,EAAc;AAAA,kBAdvB,4DAcuB;AAAA,O;AAdX,K;;;;;sEAcHA,c,EAAc;cAhB1B,sDAgB0B;eAhBjB;AACRhL,iBAAO,EAAE,CACP,4DADO,CADD;AAIRkD,mBAAS,EAAE,CACT,iEADS,EAET,iEAFS,EAGT,kEAHS,EAIT,mEAJS,EAKT,qEALS,EAMT,6DANS,EAOT,0DAPS,EAQT,2DARS,CAJH;AAcRY,sBAAY,EAAE;AAdN,S;AAgBiB,Q;;;;;;;;;;;;;;;;;;AC9B3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKamH,qB;;;AAEX,uCAAc;AAAA;AAAG;;;;sCAEHR,G,EAAa;AACzB,iBAAOS,cAAc,CAACP,OAAf,CAAuBF,GAAvB,CAAP;AACD;;;sCAEaA,G,EAAaG,I,EAAW;AACpCM,wBAAc,CAACL,OAAf,CAAuBJ,GAAvB,EAA4BxE,IAAI,CAACG,SAAL,CAAewE,IAAf,CAA5B;AACD;;;gCAEOH,G,EAAaG,I,EAAW;AAC9BM,wBAAc,CAACL,OAAf,CAAuBJ,GAAvB,EAA4BG,IAA5B;AACD;;;oCAEWH,G,EAAa;AACvB,iBAAOxE,IAAI,CAACC,KAAL,CAAWgF,cAAc,CAACP,OAAf,CAAuBF,GAAvB,CAAX,CAAP;AACD;;;mCAEUA,G,EAAa;AACtBS,wBAAc,CAACJ,UAAf,CAA0BL,GAA1B;AACD;;;gCAEO;AACNS,wBAAc,CAACH,KAAf;AACD;;;;;;;uBA1BUE,qB;AAAqB,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB,K;AAAA,kBAFpB;;;;;sEAEDA,qB,EAAqB;cAHjC,wDAGiC;eAHtB;AACVzG,oBAAU,EAAE;AADF,S;AAGsB,Q;;;;;;;;;;;;;;;;;;;;ACLlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa2G,mB;;;AAKX,mCAAoB1K,SAApB,EAAiD;AAAA;;AAA7B,aAAAA,SAAA,GAAAA,SAAA;AAFZ,aAAA2K,aAAA,GAAgB,eAAhB;AAE4C;;;;mCAElCC,U,EAAU;AAC1B,cAAIC,MAAM,GAAG,KAAb;AACA,cAAIxM,EAAE,GAAGuM,UAAT;AACA,cAAIE,KAAK,GAAG,IAAIC,MAAJ,CAAW,KAAKJ,aAAhB,EAA+B,GAA/B,CAAZ;AACA,cAAIK,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAW5M,EAAX,CAAd;;AAEA,cAAGA,EAAE,IAAI,IAAT,EAAc;AACZ,iBAAK6M,eAAL,CAAqB,kBAArB;AACD,WAFD,MAEO,IAAI7M,EAAE,CAAC8M,MAAH,GAAY,CAAhB,EAAmB;AACxB,iBAAKD,eAAL,CAAqB,uBAArB;AACD,WAFM,MAEA,IAAI7M,EAAE,CAAC8M,MAAH,GAAY,EAAhB,EAAoB;AACzB,iBAAKD,eAAL,CAAqB,uBAArB;AACD,WAFM,MAEA,IAAI,CAACF,OAAL,EAAc;AACnB,iBAAKE,eAAL,CAAqB,kBAArB;AACD,WAFM,MAEA;AACLL,kBAAM,GAAG,IAAT;AACD;;AAED,iBAAOA,MAAP;AACD;;;uCAEqBO,Y,EAAY;AAChC,cAAIP,MAAM,GAAG,KAAb;AACA,cAAI7E,IAAI,GAAGoF,YAAX;;AAEA,cAAGpF,IAAI,IAAI,IAAX,EAAgB;AACd,iBAAKkF,eAAL,CAAqB,oBAArB;AACD,WAFD,MAEO,IAAIlF,IAAI,IAAI,IAAZ,EAAkB;AACvB,iBAAKkF,eAAL,CAAqB,mBAArB;AACD,WAFM,MAEA;AACLL,kBAAM,GAAG,IAAT;AACD;;AAED,iBAAOA,MAAP;AACD;;;wCAEuBQ,O,EAAe;AACrC,cAAIC,QAAQ,GAAG,qBAAf;AACA,eAAKC,YAAL,GAAoB,KAAKvL,SAAL,CAAewL,OAAf,CAAuBF,QAAQ,GAAG,GAAX,GAAiBD,OAAxC,CAApB;AACD;;;0CAEqB;AACpB,iBAAO,KAAKE,YAAZ;AACD;;;;;;;uBAlDUb,mB,EAAmB,4H;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACV3G,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACNhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAwBa0H,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,iBATZ,CACT,6DADS,EAET,6DAFS,EAGT,mEAHS,EAIT,mEAJS,EAKT,oEALS,C;AAMV,gBATQ,CACP,4DADO,CASR;;;;0HAGUA,Y,EAAY;AAAA,uBAFR,oEAEQ,EAFgB,mEAEhB,EAFuC,mEAEvC;AAF4D,kBATjF,4DASiF;AAE5D,O;AAXT,K;;;;;sEAWHA,Y,EAAY;cAbxB,sDAawB;eAbf;AACRlM,iBAAO,EAAE,CACP,4DADO,CADD;AAIRkD,mBAAS,EAAE,CACT,6DADS,EAET,6DAFS,EAGT,mEAHS,EAIT,mEAJS,EAKT,oEALS,CAJH;AAWRY,sBAAY,EAAE,CAAC,oEAAD,EAAyB,mEAAzB,EAAgD,mEAAhD;AAXN,S;AAae,Q;;;;;;;;;;;;;;;;;;ACxBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqI,e;;;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA;AAAA;ACP5B;;AAAG;;AAAa;;;;;;;;sEDOHA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTpJ,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamJ,e;;;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA;AAAA;ACP5B;;AAAG;;AAAa;;;;;;;;sEDOHA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTrJ,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoJ,sB;;;AAEX,wCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA;AAAA;ACPnC;;AAAG;;AAAqB;;;;;;;;sEDOXA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTtJ,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqJ,qB;;;AAEX,uCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,yC;AAAA,c;AAAA,a;AAAA,uC;AAAA;AAAA;ACPlC;;AACI;;AAAG;;AAAwB;;AAC/B;;;;;;;;sEDKaA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTvJ,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOasJ,qB;;;AAEX,uCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA;AAAA;ACPlC;;AAAG;;AAAoB;;;;;;;;sEDOVA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTxJ,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMuJ,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIxL,OAAO,CAACiE,KAAR,CAAcuH,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PageNotFoundComponent } from './shared/shared.index';\r\nimport { PreloadingStrategyService } from './core/routes/preloading-strategy.service';\r\n\r\nconst appRoutes: Routes = [\r\n  /*{\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full',\r\n  },*/\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule),\r\n    data: { preload: false }\r\n  },\r\n  {\r\n    path: 'validate-token',\r\n    loadChildren: () => import('./validate-token/validate-token.module').then(m => m.ValidateTokenModule),\r\n  },\r\n  {\r\n    path: '**',\r\n    component: PageNotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes, {\r\n    useHash: true,\r\n    enableTracing: false,\r\n    preloadingStrategy: PreloadingStrategyService\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Keepalive } from '@ng-idle/keepalive';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Component, ErrorHandler } from '@angular/core';\r\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\r\nimport { ErrorGlobal } from './services/exceptions/error-global';\r\nimport { LoggingService } from './services/exceptions/logging.service';\r\nimport { environment as ENV } from '../../src/environments/environment';\r\nimport { IdleTimeoutService, ValidateDataService, GenerateQrService } from './services/services.index';\r\nimport { ErrorMessages, ErrorStages, ErrorTypes } from './services/exceptions/error-options';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [ErrorMessages, ErrorTypes, ErrorStages]\r\n})\r\nexport class AppComponent {\r\n\r\n  timedOut = false;\r\n  langs = ['es', 'en'];\r\n  lastPing?: Date = null;\r\n  idleState = 'Not started.';\r\n\r\n  constructor(\r\n    public _idle: Idle, \r\n    private http: HttpClient, \r\n    public _keepalive: Keepalive, \r\n    public errorTypes: ErrorTypes,\r\n    public _logger: LoggingService,\r\n    public errorStages: ErrorStages, \r\n    public errorMessages: ErrorMessages, \r\n    private translate: TranslateService, \r\n    public _generateQrService: GenerateQrService, \r\n    public _idleTimeoutService: IdleTimeoutService, \r\n    public _validateDataService: ValidateDataService) {\r\n\r\n    this.idleTimeout();\r\n\r\n    if(!_validateDataService.validateId(\"1020806419\")){\r\n      console.log(_validateDataService.getMessageError());\r\n    }\r\n\r\n    if(!_validateDataService.validateIdType(\"CC\")){\r\n      console.log(_validateDataService.getMessageError());\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let browserlang = this.translate.getBrowserLang();\r\n    if (this.langs.indexOf(browserlang) > -1) {\r\n      this.translate.setDefaultLang(browserlang);\r\n    } else {\r\n      this.translate.setDefaultLang('es');\r\n    }\r\n\r\n    /*this._generateQrService.getQRCode().subscribe(resp => {\r\n      console.log(resp);\r\n    });*/\r\n  }\r\n\r\n  useLanguage(lang: string): void {\r\n    this.translate.setDefaultLang(lang);\r\n  }\r\n\r\n  idleTimeout() {\r\n    this._idleTimeoutService.stateSession.subscribe(stateSession => {\r\n      if(stateSession){\r\n        this._idle.setIdle(1);\r\n        this._idle.setTimeout(ENV['time']['timeSession']);\r\n        this._idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\r\n\r\n        this._idle.onIdleEnd.subscribe(() => {\r\n          this.idleState = 'No longer idle.'\r\n          console.log(this.idleState);\r\n          this.reset();\r\n        });\r\n\r\n        this._idle.onTimeout.subscribe(() => {\r\n          this.idleState = 'Timed out!';\r\n          this.timedOut = true;\r\n          console.log(this.idleState);\r\n          //this.router.navigate(['/']);\r\n        });\r\n\r\n        this._idle.onIdleStart.subscribe(() => {\r\n          this.idleState = 'You\\'ve gone idle!'\r\n          console.log(this.idleState);\r\n          //this.childModal.show();\r\n        });\r\n\r\n        this._idle.onTimeoutWarning.subscribe((countdown) => {\r\n          this.idleState = 'You will time out in ' + countdown + ' seconds!'\r\n          console.log(this.idleState);\r\n        });\r\n\r\n        this._keepalive.interval(15);\r\n        this._keepalive.onPing.subscribe(() => this.lastPing = new Date());\r\n        this.reset();\r\n      }\r\n    });\r\n  }\r\n\r\n  reset() {\r\n\t\tthis._idle.watch();\r\n\t\tthis.idleState = 'Started.';\r\n\t\tthis.timedOut = false;\r\n  }\r\n\r\n  throwError() {\r\n    throw new ErrorGlobal(this.errorTypes.ERROR, this.errorStages.QR, this.errorMessages.F143);\r\n  }\r\n\r\n  throwHttpError() {\r\n    this.http.get('urlhere').subscribe();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<!--<button (click)=\"throwError()\">Error</button>\r\n<button (click)=\"throwHttpError()\">HTTP</button>-->\r\n","import { NgModule, ErrorHandler } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ServicesModule } from './services/services.module';\r\n\r\nimport { PreloadingStrategyService } from './core/routes/preloading-strategy.service';\r\nimport { AuthTokenProvider } from './core/interceptors/auth-token/auth-token.interceptor';\r\n\r\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\r\nimport { GlobalErrorHandlerService } from './services/exceptions/global-error-handler.service';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { HttpClientTrans, HttpLoaderFactory } from './core/translate/translate.loader';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    TranslateModule.forRoot({\r\n      defaultLanguage: 'es',\r\n      loader: {\r\n          provide: TranslateLoader,\r\n          useFactory: (HttpLoaderFactory),\r\n          deps: [HttpClientTrans]\r\n      }\r\n    }),\r\n    SharedModule,\r\n    BrowserModule,\r\n    ServicesModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgIdleKeepaliveModule.forRoot(),\r\n    LoggerModule.forRoot({\r\n      // serverLoggingUrl: 'api/logs',\r\n      level: NgxLoggerLevel.DEBUG,\r\n      serverLogLevel: NgxLoggerLevel.ERROR\r\n    }),\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 6000})\r\n  ],\r\n  providers: [\r\n    AuthTokenProvider,\r\n    PreloadingStrategyService,\r\n    { provide: ErrorHandler, \r\n      useClass: GlobalErrorHandlerService \r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment as ENV } from '../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * This function get the json web token - JWT\r\n   */\r\n  getAccessToken() {\r\n    let username = ENV['keys']['username'];\r\n    let password = ENV['keys']['password'];\r\n    let urlAccessToken = ENV['endpoints']['accessToken'];\r\n    let requestUrl = urlAccessToken + '?grant_type=client_credentials';\r\n\r\n    const headers = {\r\n      \"Skip\": \"true\",\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      \"Authorization\": 'Basic ' + btoa(username + ':' + password)\r\n    }\r\n\r\n    return this.http.post(requestUrl, null, { headers });\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { from as fromPromise } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { JwtService } from '../../http/jwt/jwt.service';\r\nimport { environment as ENV } from '../../../../environments/environment';\r\n\r\nimport { \r\n  HttpEvent,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpHeaders,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AuthTokenInterceptor implements HttpInterceptor {\r\n\r\n  accessToken = null;\r\n\r\n  constructor(private _jwtService: JwtService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    if (req.headers.get(\"Skip\")){\r\n      return next.handle(req);\r\n    }\r\n\r\n    return fromPromise(this.handleAccess(req, next));\r\n  }\r\n\r\n  private async handleAccess(req: HttpRequest<any>, next: HttpHandler){\r\n\r\n    let request = req;\r\n    let api_key = ENV['keys']['apiKey'];\r\n    let accessToken = await this.getAccessToken();\r\n\r\n    const headers = new HttpHeaders({\r\n      \"x-api-key\": api_key,\r\n      \"Autentication\": \"Bearer \" + accessToken\r\n    });\r\n    \r\n    request = req.clone({headers});\r\n\r\n    return next.handle(request).toPromise();\r\n  }\r\n\r\n  getAccessToken(){\r\n    return new Promise((resolve) => {\r\n      this._jwtService.getAccessToken().subscribe(data => {\r\n        if(data['access_token']){\r\n          resolve(data['access_token']);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  manageError(error: HttpErrorResponse) {\r\n    return throwError(error);\r\n  }\r\n}\r\n\r\nexport const AuthTokenProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: AuthTokenInterceptor,\r\n  multi: true\r\n};","import { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { PreloadingStrategy, Route } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreloadingStrategyService implements PreloadingStrategy {\r\n\r\n  constructor() { }\r\n\r\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\r\n    if (route.data && route.data['preload']) {\r\n      return load();\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient, HttpBackend } from '@angular/common/http';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class HttpClientTrans extends HttpClient {\r\n  constructor(handler: HttpBackend) {\r\n    super(handler);\r\n  }\r\n}\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}","import ecc from 'eccjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment as ENV} from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class EncryptionService {\r\n\r\n  _masterEncrypt = ENV['keys']['backend_keys']['masterEncrypt'];\r\n  _masterDecrypt = ENV['keys']['backend_keys']['masterDecrypt'];\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * This function encrypts the data\r\n   * @param value - String or array\r\n   * @returns Json - Data encrypted in the eccjs algorithm \r\n   */\r\n  getValueEncrypt(value: any):object {\r\n    return JSON.parse(ecc.encrypt(this._masterEncrypt, JSON.stringify(value)));\r\n  }\r\n\r\n  /**\r\n   * This function encrypts the data\r\n   * @param value - String or array\r\n   * @returns String - Data encrypted in the eccjs algorithm \r\n   */\r\n  getValueEncryptString(value: any):string {\r\n    return ecc.encrypt(this._masterEncrypt, JSON.stringify(value));\r\n  }\r\n\r\n  /**\r\n   * This function decrypts the data\r\n   * @param encryptInfo - Encrypted data string with the server's public key\r\n   * @returns String - Data decrypted in the eccjs algorithm \r\n   */\r\n  decryptData(encryptInfo: any):any {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        resolve(ecc.decrypt(this._masterDecrypt, JSON.stringify(encryptInfo)));\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n}","export class ErrorGlobal extends Error {\r\n    name: string;\r\n    message: string;\r\n    type: string;\r\n    stage: string;\r\n    httpStatus?: number = 404;\r\n    applicationStatus?: number;\r\n    errorMessageTranslationkey: string;\r\n    handled: boolean = false;\r\n\r\n    constructor(type?: string, stage?: string, message?: string) {\r\n      super(message);\r\n      this.name = ErrorGlobal.name;\r\n      this.type = type;\r\n      this.stage = stage;\r\n      Object.setPrototypeOf(this, ErrorGlobal.prototype);\r\n    }\r\n}\r\n","export class ErrorTypes {\r\n  // INFO, DEBUG, WARNING, ERROR, FATAL_ERROR.\r\n  INFO = 'INFO';\r\n  DEBUG = 'DEBUG';\r\n  WARNING = 'WARNING';\r\n  ERROR = 'ERROR';\r\n  FATAL_ERROR = 'FATAL_ERROR';\r\n\r\n  constructor() {}\r\n}\r\n\r\nexport class ErrorStages {\r\n  QR = 'GENERACIÓN CODIGO QR';\r\n  PUSH = 'ENVIO NOTIFICACIÓN';\r\n\r\n  constructor() {}\r\n}\r\n\r\nexport class ErrorMessages {\r\n  F141 = 'No tiene acceso a internet';\r\n  F142 = 'Ocurrio un error en el servicio';\r\n  F143 = 'Mensaje F143';\r\n  F144 = 'Mensaje F144';\r\n  F145 = 'Mensaje F145';\r\n  F146 = 'Mensaje F146';\r\n  F147 = 'Mensaje F147';\r\n  F148 = 'Mensaje F148';\r\n  F149 = 'Mensaje F149';\r\n  F150 = 'Mensaje F150';\r\n\r\n  T141 = 'Mensaje T141';\r\n  T142 = 'Mensaje T142';\r\n  T143 = 'Mensaje T143';\r\n  T144 = 'Mensaje T144';\r\n  T145 = 'Mensaje T145';\r\n  T146 = 'Mensaje T146';\r\n  T147 = 'Mensaje T147';\r\n  T148 = 'Mensaje T148';\r\n  T149 = 'Mensaje T149';\r\n  T150 = 'Mensaje T150';\r\n\r\n  constructor() {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ErrorMessages } from './error-options';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n  errorMessages: ErrorMessages;\r\n\r\n  getClientErrorMessage(error: Error): string {\r\n    return error.message ?\r\n           error.message :\r\n           error.toString();\r\n  }\r\n\r\n  getClientErrorStack(error: Error): string {\r\n    return error.stack ?\r\n           error.stack :\r\n           error.toString();\r\n  }\r\n\r\n  getServerErrorMessage(error: HttpErrorResponse): string {\r\n    return navigator.onLine ?\r\n           error.message :\r\n           this.errorMessages.F141;\r\n  }\r\n\r\n}\r\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ErrorService } from './error.service';\r\nimport { LoggingService } from './logging.service';\r\nimport { ErrorTypes, ErrorMessages } from './error-options';\r\nimport { ErrorGlobal } from './error-global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalErrorHandlerService implements ErrorHandler {\r\n\r\n  constructor(private injector: Injector, public errorMessages: ErrorMessages, public errorTypes: ErrorTypes) { }\r\n\r\n  handleError(error: ErrorGlobal | HttpErrorResponse ) {\r\n    const errorService = this.injector.get(ErrorService);\r\n    const logger = this.injector.get(LoggingService);\r\n\r\n    let message;\r\n    let stackTrace;\r\n\r\n    if (error instanceof HttpErrorResponse) { // Server error\r\n      message = errorService.getServerErrorMessage(error);\r\n      stackTrace = error.message;\r\n      logger.logError(this.errorTypes.ERROR, this.errorMessages.F142, message, stackTrace);\r\n    } else if (error instanceof Error) {  // Client Error\r\n      message = errorService.getClientErrorMessage(error);\r\n      stackTrace = errorService.getClientErrorStack(error);\r\n      logger.logError(error.type, error.stage, message, stackTrace);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable,  } from '@angular/core';\r\nimport { NGXLogger } from 'ngx-logger';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoggingService {\r\n\r\n  constructor(private _logger: NGXLogger, private toastr: ToastrService) { }\r\n\r\n    logError(type: string, stage: string, message: string, stack: string) {\r\n\r\n        // INFO, DEBUG, WARNING, ERROR, FATAL_ERROR.\r\n        switch (type) {\r\n          case 'FATAL_ERROR':\r\n            this._logger.fatal('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          case 'ERROR':\r\n            this._logger.error('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          case 'WARNING':\r\n            this._logger.warn('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          case 'DEBUG':\r\n            this._logger.debug('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          case 'INFO':\r\n            this._logger.info('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          default:\r\n            break;\r\n      }\r\n        this.showError(type, message);\r\n    }\r\n\r\n    showError(type: string, message: string) {\r\n      switch (type) {\r\n        case 'FATAL_ERROR':\r\n        case 'ERROR':\r\n          this.toastr.error(message, 'Error');\r\n          break;\r\n        case 'WARNING':\r\n          this.toastr.warning(message, 'Advertencia');\r\n          break;\r\n        case 'DEBUG':\r\n          this.toastr.info(message, 'Verificar');\r\n          break;\r\n        case 'INFO':\r\n          this.toastr.info(message, 'Verificar');\r\n          break;\r\n        default:\r\n          break;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GenerateQr } from 'src/app/core/models/generate-qr.model';\r\nimport { environment as ENV } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GenerateQrService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getQRCode(generateQr: GenerateQr ) {\r\n    // const urlExample = 'https://reqres.in/api/user';\r\n    // return this.http.get(urlExample);\r\n    return this.http.post(ENV['endpoints']['generateQR'], generateQr);\r\n  }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class IdleTimeoutService {\r\n\r\n  private validateSession = new BehaviorSubject(false);\r\n  stateSession = this.validateSession.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  setValidateSession(logout: boolean) {\r\n    this.validateSession.next(logout);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor() { }\r\n\r\n  getItemString(key: string) {\r\n    return localStorage.getItem(key);\r\n  }\r\n\r\n  stringifyItem(key: string, item: any) {\r\n    localStorage.setItem(key, JSON.stringify(item));\r\n  }\r\n\r\n  setItem(key: string, item: any) {\r\n    localStorage.setItem(key, item);\r\n  }\r\n\r\n  getItemJSON(key: string) {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  clear() {\r\n    localStorage.clear();\r\n  }\r\n}","export { EncryptionService } from './encryption/encryption.service';\r\nexport { IdleTimeoutService } from './idle-timeout/idle-timeout.service';\r\nexport { GenerateQrService } from './http/generate-qr/generate-qr.service';\r\nexport { LocalStorageService } from './local-storage/local-storage.service';\r\nexport { ValidateDataService } from './validate-data/validate-data.service';\r\nexport { SessionStorageService } from './session-storage/session-storage.service';\r\nexport { ErrorMessages, ErrorStages, ErrorTypes } from './exceptions/error-options';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  EncryptionService,\r\n  IdleTimeoutService,\r\n  LocalStorageService,\r\n  SessionStorageService,\r\n  GenerateQrService,\r\n  ErrorMessages,\r\n  ErrorStages,\r\n  ErrorTypes\r\n} from './services.index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    GenerateQrService,\r\n    EncryptionService,\r\n    IdleTimeoutService,\r\n    LocalStorageService,\r\n    SessionStorageService,\r\n    ErrorMessages,\r\n    ErrorTypes,\r\n    ErrorStages\r\n  ],\r\n  declarations: []\r\n})\r\nexport class ServicesModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionStorageService {\r\n\r\n  constructor() { }\r\n\r\n  getItemString(key: string) {\r\n    return sessionStorage.getItem(key);\r\n  }\r\n\r\n  stringifyItem(key: string, item: any) {\r\n    sessionStorage.setItem(key, JSON.stringify(item));\r\n  }\r\n\r\n  setItem(key: string, item: any) {\r\n    sessionStorage.setItem(key, item);\r\n  }\r\n\r\n  getItemJSON(key: string) {\r\n    return JSON.parse(sessionStorage.getItem(key));\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    sessionStorage.removeItem(key);\r\n  }\r\n\r\n  clear() {\r\n    sessionStorage.clear();\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateDataService {\r\n\r\n  private messageError;\r\n  private REGEX_NUMBERS = \"^[1-9][0-9]*$\";\r\n\r\n  constructor(private translate: TranslateService) { }\r\n\r\n  public validateId(documentId):boolean {\r\n    let result = false;\r\n    var id = documentId;\r\n    var regex = new RegExp(this.REGEX_NUMBERS, 'g');\r\n    var matcher = regex.test(id);\r\n\r\n    if(id == null){\r\n      this.setMessageError(\"documentId.empty\");\r\n    } else if (id.length < 6) {\r\n      this.setMessageError(\"documentId.length_min\");\r\n    } else if (id.length > 10) {\r\n      this.setMessageError(\"documentId.length_max\");\r\n    } else if (!matcher) {\r\n      this.setMessageError(\"documentId.regex\");\r\n    } else {\r\n      result = true;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public validateIdType(documentType):boolean {\r\n    let result = false;\r\n    var type = documentType;\r\n\r\n    if(type == null){\r\n      this.setMessageError(\"documentType.empty\");\r\n    } else if (type != 'CC') {\r\n      this.setMessageError(\"documentType.type\");\r\n    } else {\r\n      result = true;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private setMessageError(pathMsg: string){\r\n    let initPath = \"error.validate_data\";\r\n    this.messageError = this.translate.instant(initPath + \".\" + pathMsg);\r\n  }\r\n\r\n  public getMessageError(){\r\n    return this.messageError;\r\n  }\r\n}","// Theme\r\nexport { FooterComponent } from './theme/footer/footer.component';\r\nexport { HeaderComponent } from './theme/header/header.component';\r\nexport { ServiceErrorComponent } from './theme/service-error/service-error.component';\r\nexport { PageNotFoundComponent } from './theme/page-not-found/page-not-found.component';\r\nexport { NotAuthorizedComponent } from './theme/not-authorized/not-authorized.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { \r\n    FooterComponent, \r\n    HeaderComponent,\r\n    PageNotFoundComponent,\r\n    ServiceErrorComponent,\r\n    NotAuthorizedComponent\r\n} from './shared.index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    FooterComponent, \r\n    HeaderComponent,\r\n    PageNotFoundComponent,\r\n    ServiceErrorComponent,\r\n    NotAuthorizedComponent\r\n  ],\r\n  declarations: [NotAuthorizedComponent, ServiceErrorComponent, PageNotFoundComponent]\r\n})\r\nexport class SharedModule { }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>footer works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>header works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-authorized',\r\n  templateUrl: './not-authorized.component.html',\r\n  styleUrls: ['./not-authorized.component.scss']\r\n})\r\nexport class NotAuthorizedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>not-authorized works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container m-5\">\r\n    <p>Ups... page not found...</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-service-error',\r\n  templateUrl: './service-error.component.html',\r\n  styleUrls: ['./service-error.component.scss']\r\n})\r\nexport class ServiceErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>service-error works!</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}