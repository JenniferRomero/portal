{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","(webpack)/buildin/global.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/http/jwt/jwt.service.ts","./src/app/core/interceptors/auth-token/auth-token.interceptor.ts","./src/app/core/routes/preloading-strategy.service.ts","./src/app/core/translate/translate.loader.ts","./src/app/services/encryption/encryption.service.ts","./src/app/services/exceptions/error-global.ts","./src/app/services/exceptions/error-options.ts","./src/app/services/exceptions/error.service.ts","./src/app/services/exceptions/global-error-handler.service.ts","./src/app/services/exceptions/logging.service.ts","./src/app/services/http/entity/entity.service.ts","./src/app/services/http/generate-qr/generate-qr.service.ts","./src/app/services/idle-timeout/idle-timeout.service.ts","./src/app/services/local-storage/local-storage.service.ts","./src/app/services/services.index.ts","./src/app/services/services.module.ts","./src/app/services/session-storage/session-storage.service.ts","./src/app/services/validate-data/validate-data.service.ts","./src/app/shared/shared.index.ts","./src/app/shared/shared.module.ts","./src/app/shared/theme/footer/footer.component.ts","./src/app/shared/theme/footer/footer.component.html","./src/app/shared/theme/header/header.component.ts","./src/app/shared/theme/header/header.component.html","./src/app/shared/theme/not-authorized/not-authorized.component.ts","./src/app/shared/theme/not-authorized/not-authorized.component.html","./src/app/shared/theme/page-not-found/page-not-found.component.ts","./src/app/shared/theme/page-not-found/page-not-found.component.html","./src/app/shared/theme/service-error/service-error.component.ts","./src/app/shared/theme/service-error/service-error.component.html","./src/environments/environment.ts","./src/main.ts","util (ignored)","webpack:///util (ignored)?f5a4","buffer (ignored)","crypto (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PageNotFoundComponent } from './shared/shared.index';\r\nimport { PreloadingStrategyService } from './core/routes/preloading-strategy.service';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule),\r\n    data: { preload: false }\r\n  },\r\n  {\r\n    path: 'validate-token',\r\n    loadChildren: () => import('./validate-token/validate-token.module').then(m => m.ValidateTokenModule),\r\n  },\r\n  {\r\n    path: '**',\r\n    component: PageNotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes, {\r\n    useHash: true,\r\n    enableTracing: false,\r\n    preloadingStrategy: PreloadingStrategyService\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Keepalive } from '@ng-idle/keepalive';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Component, ErrorHandler } from '@angular/core';\r\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\r\nimport { ErrorGlobal } from './services/exceptions/error-global';\r\nimport { LoggingService } from './services/exceptions/logging.service';\r\nimport { environment as ENV } from '../../src/environments/environment';\r\nimport { IdleTimeoutService, ValidateDataService, GenerateQrService } from './services/services.index';\r\nimport { ErrorMessages, ErrorStages, ErrorTypes } from './services/exceptions/error-options';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [ErrorMessages, ErrorTypes, ErrorStages]\r\n})\r\nexport class AppComponent {\r\n\r\n  timedOut = false;\r\n  langs = ['es', 'en'];\r\n  lastPing?: Date = null;\r\n  idleState = 'Not started.';\r\n\r\n  constructor(\r\n    public _idle: Idle, \r\n    private http: HttpClient, \r\n    public _keepalive: Keepalive, \r\n    public errorTypes: ErrorTypes,\r\n    public _logger: LoggingService,\r\n    public errorStages: ErrorStages, \r\n    public errorMessages: ErrorMessages, \r\n    private translate: TranslateService, \r\n    public _generateQrService: GenerateQrService, \r\n    public _idleTimeoutService: IdleTimeoutService, \r\n    public _validateDataService: ValidateDataService) {\r\n\r\n    this.idleTimeout();\r\n\r\n    if(!_validateDataService.validateId(\"1020806419\")){\r\n      console.log(_validateDataService.getMessageError());\r\n    }\r\n\r\n    if(!_validateDataService.validateIdType(\"CC\")){\r\n      console.log(_validateDataService.getMessageError());\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let browserlang = this.translate.getBrowserLang();\r\n    if (this.langs.indexOf(browserlang) > -1) {\r\n      this.translate.setDefaultLang(browserlang);\r\n    } else {\r\n      this.translate.setDefaultLang('es');\r\n    }\r\n\r\n    /*this._generateQrService.getQRCode().subscribe(resp => {\r\n      console.log(resp);\r\n    });*/\r\n  }\r\n\r\n  useLanguage(lang: string): void {\r\n    this.translate.setDefaultLang(lang);\r\n  }\r\n\r\n  idleTimeout() {\r\n    this._idleTimeoutService.stateSession.subscribe(stateSession => {\r\n      if(stateSession){\r\n        this._idle.setIdle(1);\r\n        this._idle.setTimeout(ENV['time']['timeSession']);\r\n        this._idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\r\n\r\n        this._idle.onIdleEnd.subscribe(() => {\r\n          this.idleState = 'No longer idle.'\r\n          console.log(this.idleState);\r\n          this.reset();\r\n        });\r\n\r\n        this._idle.onTimeout.subscribe(() => {\r\n          this.idleState = 'Timed out!';\r\n          this.timedOut = true;\r\n          console.log(this.idleState);\r\n          //this.router.navigate(['/']);\r\n        });\r\n\r\n        this._idle.onIdleStart.subscribe(() => {\r\n          this.idleState = 'You\\'ve gone idle!'\r\n          console.log(this.idleState);\r\n          //this.childModal.show();\r\n        });\r\n\r\n        this._idle.onTimeoutWarning.subscribe((countdown) => {\r\n          this.idleState = 'You will time out in ' + countdown + ' seconds!'\r\n          console.log(this.idleState);\r\n        });\r\n\r\n        this._keepalive.interval(15);\r\n        this._keepalive.onPing.subscribe(() => this.lastPing = new Date());\r\n        this.reset();\r\n      }\r\n    });\r\n  }\r\n\r\n  reset() {\r\n\t\tthis._idle.watch();\r\n\t\tthis.idleState = 'Started.';\r\n\t\tthis.timedOut = false;\r\n  }\r\n\r\n  throwError() {\r\n    throw new ErrorGlobal(this.errorTypes.ERROR, this.errorStages.QR, this.errorMessages.F143);\r\n  }\r\n\r\n  throwHttpError() {\r\n    this.http.get('urlhere').subscribe();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<!--<button (click)=\"throwError()\">Error</button>\r\n<button (click)=\"throwHttpError()\">HTTP</button>-->\r\n","import { NgModule, ErrorHandler } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ServicesModule } from './services/services.module';\r\n\r\nimport { PreloadingStrategyService } from './core/routes/preloading-strategy.service';\r\nimport { AuthTokenProvider } from './core/interceptors/auth-token/auth-token.interceptor';\r\n\r\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\r\nimport { GlobalErrorHandlerService } from './services/exceptions/global-error-handler.service';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { HttpClientTrans, HttpLoaderFactory } from './core/translate/translate.loader';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    TranslateModule.forRoot({\r\n      defaultLanguage: 'es',\r\n      loader: {\r\n          provide: TranslateLoader,\r\n          useFactory: (HttpLoaderFactory),\r\n          deps: [HttpClientTrans]\r\n      }\r\n    }),\r\n    SharedModule,\r\n    BrowserModule,\r\n    ServicesModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgIdleKeepaliveModule.forRoot(),\r\n    LoggerModule.forRoot({\r\n      // serverLoggingUrl: 'api/logs',\r\n      level: NgxLoggerLevel.DEBUG,\r\n      serverLogLevel: NgxLoggerLevel.ERROR\r\n    }),\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 6000})\r\n  ],\r\n  providers: [\r\n    AuthTokenProvider,\r\n    PreloadingStrategyService,\r\n    { provide: ErrorHandler, \r\n      useClass: GlobalErrorHandlerService \r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment as ENV } from '../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * This function get the json web token - JWT\r\n   */\r\n  getAccessToken() {\r\n    let username = ENV['keys']['username'];\r\n    let password = ENV['keys']['password'];\r\n    let urlAccessToken = ENV['endpoints']['accessToken'];\r\n    let requestUrl = urlAccessToken + '?grant_type=client_credentials';\r\n\r\n    const headers = {\r\n      \"Skip\": \"true\",\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      \"Authorization\": 'Basic ' + btoa(username + ':' + password)\r\n    }\r\n\r\n    return this.http.post(requestUrl, null, { headers });\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { from as fromPromise } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { JwtService } from '../../http/jwt/jwt.service';\r\nimport { environment as ENV } from '../../../../environments/environment';\r\n\r\nimport { \r\n  HttpEvent,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpHeaders,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AuthTokenInterceptor implements HttpInterceptor {\r\n\r\n  accessToken = null;\r\n\r\n  constructor(private _jwtService: JwtService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    if (req.headers.get(\"Skip\")){\r\n      return next.handle(req);\r\n    }\r\n\r\n    return fromPromise(this.handleAccess(req, next));\r\n  }\r\n\r\n  private async handleAccess(req: HttpRequest<any>, next: HttpHandler){\r\n\r\n    let request = req;\r\n    let api_key = ENV['keys']['apiKey'];\r\n    let accessToken = await this.getAccessToken();\r\n\r\n    const headers = new HttpHeaders({\r\n      \"x-api-key\": api_key,\r\n      \"Autentication\": \"Bearer \" + accessToken\r\n    });\r\n    \r\n    request = req.clone({headers});\r\n\r\n    return next.handle(request).toPromise();\r\n  }\r\n\r\n  getAccessToken(){\r\n    return new Promise((resolve) => {\r\n      this._jwtService.getAccessToken().subscribe(data => {\r\n        if(data['access_token']){\r\n          resolve(data['access_token']);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  manageError(error: HttpErrorResponse) {\r\n    return throwError(error);\r\n  }\r\n}\r\n\r\nexport const AuthTokenProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: AuthTokenInterceptor,\r\n  multi: true\r\n};","import { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { PreloadingStrategy, Route } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreloadingStrategyService implements PreloadingStrategy {\r\n\r\n  constructor() { }\r\n\r\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\r\n    if (route.data && route.data['preload']) {\r\n      return load();\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient, HttpBackend } from '@angular/common/http';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class HttpClientTrans extends HttpClient {\r\n  constructor(handler: HttpBackend) {\r\n    super(handler);\r\n  }\r\n}\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}","import ecc from 'eccjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment as ENV} from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class EncryptionService {\r\n\r\n  _masterEncrypt = ENV['keys']['backend_keys']['masterEncrypt'];\r\n  _masterDecrypt = ENV['keys']['backend_keys']['masterDecrypt'];\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * This function encrypts the data\r\n   * @param value - String or array\r\n   * @returns Json - Data encrypted in the eccjs algorithm \r\n   */\r\n  getValueEncrypt(value: any):object {\r\n    return JSON.parse(ecc.encrypt(this._masterEncrypt, JSON.stringify(value)));\r\n  }\r\n\r\n  /**\r\n   * This function encrypts the data\r\n   * @param value - String or array\r\n   * @returns String - Data encrypted in the eccjs algorithm \r\n   */\r\n  getValueEncryptString(value: any):string {\r\n    return ecc.encrypt(this._masterEncrypt, JSON.stringify(value));\r\n  }\r\n\r\n  /**\r\n   * This function decrypts the data\r\n   * @param encryptInfo - Encrypted data string with the server's public key\r\n   * @returns String - Data decrypted in the eccjs algorithm \r\n   */\r\n  decryptData(encryptInfo: any):any {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        resolve(ecc.decrypt(this._masterDecrypt, JSON.stringify(encryptInfo)));\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n}","export class ErrorGlobal extends Error {\r\n    name: string;\r\n    message: string;\r\n    type: string;\r\n    stage: string;\r\n    httpStatus?: number = 404;\r\n    applicationStatus?: number;\r\n    errorMessageTranslationkey: string;\r\n    handled: boolean = false;\r\n\r\n    constructor(type?: string, stage?: string, message?: string) {\r\n      super(message);\r\n      this.name = ErrorGlobal.name;\r\n      this.type = type;\r\n      this.stage = stage;\r\n      Object.setPrototypeOf(this, ErrorGlobal.prototype);\r\n    }\r\n}\r\n","export class ErrorTypes {\r\n  // INFO, DEBUG, WARNING, ERROR, FATAL_ERROR.\r\n  INFO = 'INFO';\r\n  DEBUG = 'DEBUG';\r\n  WARNING = 'WARNING';\r\n  ERROR = 'ERROR';\r\n  FATAL_ERROR = 'FATAL_ERROR';\r\n\r\n  constructor() {}\r\n}\r\n\r\nexport class ErrorStages {\r\n  QR = 'GENERACIÓN CODIGO QR';\r\n  PUSH = 'ENVIO NOTIFICACIÓN';\r\n\r\n  constructor() {}\r\n}\r\n\r\nexport class ErrorMessages {\r\n  F141 = 'No tiene acceso a internet';\r\n  F142 = 'Ocurrio un error en el servicio';\r\n  F143 = 'Mensaje F143';\r\n  F144 = 'Mensaje F144';\r\n  F145 = 'Mensaje F145';\r\n  F146 = 'Mensaje F146';\r\n  F147 = 'Mensaje F147';\r\n  F148 = 'Mensaje F148';\r\n  F149 = 'Mensaje F149';\r\n  F150 = 'Mensaje F150';\r\n\r\n  T141 = 'Mensaje T141';\r\n  T142 = 'Mensaje T142';\r\n  T143 = 'Mensaje T143';\r\n  T144 = 'Mensaje T144';\r\n  T145 = 'Mensaje T145';\r\n  T146 = 'Mensaje T146';\r\n  T147 = 'Mensaje T147';\r\n  T148 = 'Mensaje T148';\r\n  T149 = 'Mensaje T149';\r\n  T150 = 'Mensaje T150';\r\n\r\n  constructor() {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ErrorMessages } from './error-options';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n  errorMessages: ErrorMessages;\r\n\r\n  getClientErrorMessage(error: Error): string {\r\n    return error.message ?\r\n           error.message :\r\n           error.toString();\r\n  }\r\n\r\n  getClientErrorStack(error: Error): string {\r\n    return error.stack ?\r\n           error.stack :\r\n           error.toString();\r\n  }\r\n\r\n  getServerErrorMessage(error: HttpErrorResponse): string {\r\n    return navigator.onLine ?\r\n           error.message :\r\n           this.errorMessages.F141;\r\n  }\r\n\r\n}\r\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ErrorService } from './error.service';\r\nimport { LoggingService } from './logging.service';\r\nimport { ErrorTypes, ErrorMessages } from './error-options';\r\nimport { ErrorGlobal } from './error-global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalErrorHandlerService implements ErrorHandler {\r\n\r\n  constructor(private injector: Injector, public errorMessages: ErrorMessages, public errorTypes: ErrorTypes) { }\r\n\r\n  handleError(error: ErrorGlobal | HttpErrorResponse ) {\r\n    const errorService = this.injector.get(ErrorService);\r\n    const logger = this.injector.get(LoggingService);\r\n\r\n    let message;\r\n    let stackTrace;\r\n\r\n    if (error instanceof HttpErrorResponse) { // Server error\r\n      message = errorService.getServerErrorMessage(error);\r\n      stackTrace = error.message;\r\n      logger.logError(this.errorTypes.ERROR, this.errorMessages.F142, message, stackTrace);\r\n    } else if (error instanceof Error) {  // Client Error\r\n      message = errorService.getClientErrorMessage(error);\r\n      stackTrace = errorService.getClientErrorStack(error);\r\n      logger.logError(error.type, error.stage, message, stackTrace);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable,  } from '@angular/core';\r\nimport { NGXLogger } from 'ngx-logger';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoggingService {\r\n\r\n  constructor(private _logger: NGXLogger, private toastr: ToastrService) { }\r\n\r\n    logError(type: string, stage: string, message: string, stack: string) {\r\n\r\n        // INFO, DEBUG, WARNING, ERROR, FATAL_ERROR.\r\n        switch (type) {\r\n          case 'FATAL_ERROR':\r\n            this._logger.fatal('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          case 'ERROR':\r\n            this._logger.error('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          case 'WARNING':\r\n            this._logger.warn('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          case 'DEBUG':\r\n            this._logger.debug('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          case 'INFO':\r\n            this._logger.info('AppWeb', stage, 'ID', message, stack);\r\n            break;\r\n          default:\r\n            break;\r\n      }\r\n        this.showError(type, message);\r\n    }\r\n\r\n    showError(type: string, message: string) {\r\n      switch (type) {\r\n        case 'FATAL_ERROR':\r\n        case 'ERROR':\r\n          this.toastr.error(message, 'Error');\r\n          break;\r\n        case 'WARNING':\r\n          this.toastr.warning(message, 'Advertencia');\r\n          break;\r\n        case 'DEBUG':\r\n          this.toastr.info(message, 'Verificar');\r\n          break;\r\n        case 'INFO':\r\n          this.toastr.info(message, 'Verificar');\r\n          break;\r\n        default:\r\n          break;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment as ENV } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntityService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEntity(idNumber: number){\r\n    //return this.http.get('https://reqres.in/api/user');\r\n    return this.http.get(ENV['endpoints']['validateEntity']);\r\n    //return this.http.get(ENV['endpoints']['validateEntity'] + '/entities/' + idNumber);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment as ENV } from 'src/environments/environment';\r\nimport { GenerateQr } from 'src/app/core/models/generate-qr.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GenerateQrService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getQRCode(generateQr: GenerateQr) {\r\n    return this.http.post(ENV['endpoints']['generateQR'], generateQr);\r\n  }\r\n}","import { BehaviorSubject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class IdleTimeoutService {\r\n\r\n  private validateSession = new BehaviorSubject(false);\r\n  stateSession = this.validateSession.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  setValidateSession(logout: boolean) {\r\n    this.validateSession.next(logout);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor() { }\r\n\r\n  getItemString(key: string) {\r\n    return localStorage.getItem(key);\r\n  }\r\n\r\n  stringifyItem(key: string, item: any) {\r\n    localStorage.setItem(key, JSON.stringify(item));\r\n  }\r\n\r\n  setItem(key: string, item: any) {\r\n    localStorage.setItem(key, item);\r\n  }\r\n\r\n  getItemJSON(key: string) {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  clear() {\r\n    localStorage.clear();\r\n  }\r\n}","export { EntityService } from './http/entity/entity.service';\r\nexport { EncryptionService } from './encryption/encryption.service';\r\nexport { IdleTimeoutService } from './idle-timeout/idle-timeout.service';\r\nexport { GenerateQrService } from './http/generate-qr/generate-qr.service';\r\nexport { LocalStorageService } from './local-storage/local-storage.service';\r\nexport { ValidateDataService } from './validate-data/validate-data.service';\r\nexport { SessionStorageService } from './session-storage/session-storage.service';\r\nexport { ErrorMessages, ErrorStages, ErrorTypes } from './exceptions/error-options';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  EncryptionService,\r\n  IdleTimeoutService,\r\n  LocalStorageService,\r\n  SessionStorageService,\r\n  GenerateQrService,\r\n  ErrorMessages,\r\n  ErrorStages,\r\n  ErrorTypes\r\n} from './services.index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    GenerateQrService,\r\n    EncryptionService,\r\n    IdleTimeoutService,\r\n    LocalStorageService,\r\n    SessionStorageService,\r\n    ErrorMessages,\r\n    ErrorTypes,\r\n    ErrorStages\r\n  ],\r\n  declarations: []\r\n})\r\nexport class ServicesModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionStorageService {\r\n\r\n  constructor() { }\r\n\r\n  getItemString(key: string) {\r\n    return sessionStorage.getItem(key);\r\n  }\r\n\r\n  stringifyItem(key: string, item: any) {\r\n    sessionStorage.setItem(key, JSON.stringify(item));\r\n  }\r\n\r\n  setItem(key: string, item: any) {\r\n    sessionStorage.setItem(key, item);\r\n  }\r\n\r\n  getItemJSON(key: string) {\r\n    return JSON.parse(sessionStorage.getItem(key));\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    sessionStorage.removeItem(key);\r\n  }\r\n\r\n  clear() {\r\n    sessionStorage.clear();\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateDataService {\r\n\r\n  private messageError;\r\n  private REGEX_NUMBERS = \"^[1-9][0-9]*$\";\r\n\r\n  constructor(private translate: TranslateService) { }\r\n\r\n  public validateId(documentId):boolean {\r\n    let result = false;\r\n    var id = documentId;\r\n    var regex = new RegExp(this.REGEX_NUMBERS, 'g');\r\n    var matcher = regex.test(id);\r\n\r\n    if(id == null){\r\n      this.setMessageError(\"documentId.empty\");\r\n    } else if (id.length < 6) {\r\n      this.setMessageError(\"documentId.length_min\");\r\n    } else if (id.length > 10) {\r\n      this.setMessageError(\"documentId.length_max\");\r\n    } else if (!matcher) {\r\n      this.setMessageError(\"documentId.regex\");\r\n    } else {\r\n      result = true;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public validateIdType(documentType):boolean {\r\n    let result = false;\r\n    var type = documentType;\r\n\r\n    if(type == null){\r\n      this.setMessageError(\"documentType.empty\");\r\n    } else if (type != 'CC') {\r\n      this.setMessageError(\"documentType.type\");\r\n    } else {\r\n      result = true;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private setMessageError(pathMsg: string){\r\n    let initPath = \"error.validate_data\";\r\n    this.messageError = this.translate.instant(initPath + \".\" + pathMsg);\r\n  }\r\n\r\n  public getMessageError(){\r\n    return this.messageError;\r\n  }\r\n}","// Theme\r\nexport { FooterComponent } from './theme/footer/footer.component';\r\nexport { HeaderComponent } from './theme/header/header.component';\r\nexport { ServiceErrorComponent } from './theme/service-error/service-error.component';\r\nexport { PageNotFoundComponent } from './theme/page-not-found/page-not-found.component';\r\nexport { NotAuthorizedComponent } from './theme/not-authorized/not-authorized.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { \r\n    FooterComponent, \r\n    HeaderComponent,\r\n    PageNotFoundComponent,\r\n    ServiceErrorComponent,\r\n    NotAuthorizedComponent\r\n} from './shared.index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    FooterComponent, \r\n    HeaderComponent,\r\n    PageNotFoundComponent,\r\n    ServiceErrorComponent,\r\n    NotAuthorizedComponent\r\n  ],\r\n  declarations: [NotAuthorizedComponent, ServiceErrorComponent, PageNotFoundComponent]\r\n})\r\nexport class SharedModule { }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>footer works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>header works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-authorized',\r\n  templateUrl: './not-authorized.component.html',\r\n  styleUrls: ['./not-authorized.component.scss']\r\n})\r\nexport class NotAuthorizedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>not-authorized works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container m-5\">\r\n    <p>Ups... page not found...</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-service-error',\r\n  templateUrl: './service-error.component.html',\r\n  styleUrls: ['./service-error.component.scss']\r\n})\r\nexport class ServiceErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>service-error works!</p>\r\n","export const environment = {\r\n\tproduction: false,\r\n\tendpoints: {\r\n\t\taccessToken: \"https://soyyodev.auth.us-east-1.amazoncognito.com/oauth2/token\",\r\n\t\tvalidateToken: \"https://m0feaaiiu7.execute-api.us-east-1.amazonaws.com/dev/api/v1/token\",\r\n\t\tgenerateQR: \"https://jsonplaceholder.typicode.com/posts/1\",\r\n\t\tvalidateEntity: \"https://reqres.in/api/user\"\r\n\t},\r\n\tkeys: {\r\n\t\tusername: \"i9k7m3o570i15p3v4a678s79e\",\r\n\t\tpassword: \"ftovorpv8k4knllnlbjchqq2rau2gif7qhdtagqjdu0k033rcl2\",\r\n\t\tapiKey: \"bYEHYDL5dU1HrkKjlgkzN5SJVwJmFSHP9kdBAl2B\"\r\n\t},\r\n\ttime: {\r\n        timeSession: 300\r\n\t}\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}